task pullScutsCore(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsCore', 'git@github.com:frabbit/scutsCore.git', 'master']
  commandLine cmd
}

task pullScutsDs(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsDs', 'git@github.com:frabbit/scutsDs.git', 'master']
  commandLine cmd
}

task pullScutsHt(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsHt', 'git@github.com:frabbit/scutsHt.git', 'master']
  commandLine cmd
}

task pullScutsMacros(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsMacros', 'git@github.com:frabbit/scutsMacros.git', 'master']
  commandLine cmd
}

task pullScutsReactive(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsReactive', 'git@github.com:frabbit/scutsReactive.git', 'master']
  commandLine cmd
}

task pullScutsMCore(type:Exec) {
  def cmd = ['git', 'subtree', 'pull', '--prefix', 'scutsMCore', 'git@github.com:frabbit/scutsMCore.git', 'master']
  commandLine cmd
}



task pushScutsCore(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsCore', 'git@github.com:frabbit/scutsCore.git', 'master']
  commandLine cmd
}

task pushScutsDs(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsDs', 'git@github.com:frabbit/scutsDs.git', 'master']
  commandLine cmd
}

task pushScutsHt(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsHt', 'git@github.com:frabbit/scutsHt.git', 'master']
  commandLine cmd
}

task pushScutsMacros(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsMacros', 'git@github.com:frabbit/scutsMacros.git', 'master']
  commandLine cmd
}

task pushScutsReactive(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsReactive', 'git@github.com:frabbit/scutsReactive.git', 'master']
  commandLine cmd
}

task pushScutsMCore(type:Exec) {
  def cmd = ['git', 'subtree', 'push', '--prefix', 'scutsMCore', 'git@github.com:frabbit/scutsMCore.git', 'master']
  commandLine cmd
}

task pushSubmodules << {}
pushSubmodules.dependsOn pushScutsCore
pushSubmodules.dependsOn pushScutsMCore
pushSubmodules.dependsOn pushScutsDs
pushSubmodules.dependsOn pushScutsHt
pushSubmodules.dependsOn pushScutsMacros
pushSubmodules.dependsOn pushScutsReactive

task pullSubmodules << {}
pullSubmodules.dependsOn pullScutsCore
pullSubmodules.dependsOn pullScutsMCore
pullSubmodules.dependsOn pullScutsDs
pullSubmodules.dependsOn pullScutsHt
pullSubmodules.dependsOn pullScutsMacros
pullSubmodules.dependsOn pullScutsReactive


task wrapper(type: Wrapper) {
    gradleVersion  = '1.2'
	jarFile = 'gradle/wrapper/gradle-wrapper.jar'
}

task test (type:Exec) {
  
  def valueList = ['haxe', 
    '-cp', 'src', '-cp', 'test', '-cp', 'src', '-lib', 'utest', '--no-output', '--macro', 'AllTests.main()', '--times', '-D', 'macrotimes', '--connect', '1978']
  
	commandLine valueList
    
  
  def values2 = [
     'haxe',
    '-cp', 'src',
    '-cp', 'test',
    '-cp', 'src',
    '-lib', 'utest',
    '-main', 'AllTests',
    '-x', 'bin/test/testNeko',
    '--times',
    '-D', 'macrotimes',
    '--connect', '1978'
    ]
  commandLine values2
    

}